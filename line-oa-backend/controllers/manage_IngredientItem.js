const express = require("express");
const db = require('../db');
const app = express();
const cors = require("cors");
require('dotenv').config();
const axios = require("axios");
const line = require('@line/bot-sdk');

const moment = require("moment-timezone");

exports.getIngredientItems = async (req, res) => {
    try {
        console.log("üîé Query Parameters:", req.query);

        const { ingredient_id } = req.query;

        if (!ingredient_id) {
            return res.status(400).json({ message: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏ ingredient_id" });
        }

        const sql = `
            SELECT 
                Ingredient_Item.*, 
                DATE_FORMAT(CONVERT_TZ(Updated_at, '+00:00', '+07:00'), '%d/%m/%Y %H:%i:%s') AS Updated_at_local
            FROM Ingredient_Item 
            WHERE Ingredient_ID = ? 
            ORDER BY Updated_at ASC;
        `;

        const [ingredientItems] = await db.query(sql, [ingredient_id]);

        //  ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ Price ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        const result = ingredientItems.map(item => ({
            ...item,
            Price: Number(item.Price) || 0
        }));

        console.log("üì¢ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡πÑ‡∏î‡πâ:", result);

        res.status(200).json(result);
    } catch (error) {
        console.error("üö® ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• IngredientItem ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", error);
        res.status(500).json({ message: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•" });
    }
};

exports.updateExpDate = async (req, res) => {
    const { batch_code, exp_date } = req.body;
    if (!batch_code || !exp_date) {
        return res.status(400).json({ message: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏ batch_code ‡πÅ‡∏•‡∏∞ exp_date" });
    }

    try {
        const sql = `UPDATE Ingredient_Item SET EXP_date = ? WHERE Batch_code = ?`;
        await db.query(sql, [exp_date, batch_code]);
        res.status(200).json({ message: "‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ß‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à" });
    } catch (err) {
        console.error("‚ùå ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ß‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", err);
        res.status(500).json({ message: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï" });
    }
};








